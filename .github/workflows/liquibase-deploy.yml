name: Liquibase Deploy

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # --- SSH to EC2 and run Liquibase there ---
      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Add EC2 to known_hosts (skip strict check)
        run: |
          printf "Host *\n    StrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: Deploy via EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          REPO_URL: ${{ secrets.REPO_CLONE_URL }}
          JDBC_URL: ${{ secrets.RDS_JDBC_URL }}
          DB_USER:  ${{ secrets.DB_USER }}
          DB_PASS:  ${{ secrets.DB_PASS }}
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} <<'EOF'
            set -e

            # 1) Clone or update the repo on the EC2 box
            WORKDIR="$HOME/Sample_liquibase"
            if [ ! -d "$WORKDIR/.git" ]; then
              git clone "${REPO_URL}" "$WORKDIR"
            else
              cd "$WORKDIR"
              git remote set-url origin "${REPO_URL}" || true
              git fetch --all --prune
              git checkout -B main origin/main || git checkout main || true
              git pull --ff-only origin main || true
            fi

            cd "$WORKDIR"

            # 2) Run Liquibase update against RDS
            mvn -q \
              -Dliquibase.url="${JDBC_URL}" \
              -Dliquibase.username="${DB_USER}" \
              -Dliquibase.password="${DB_PASS}" \
              -Dliquibase.changeLogFile=src/main/resources/db/changelog/db.changelog-master.yaml \
              liquibase:update

            # Optional: show history (helps debug)
            mvn -q \
              -Dliquibase.url="${JDBC_URL}" \
              -Dliquibase.username="${DB_USER}" \
              -Dliquibase.password="${DB_PASS}" \
              liquibase:history
          EOF
